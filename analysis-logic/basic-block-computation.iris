/**
 *  compute basic block starts
 */
bbBegin(?m, ?i) :- atLabel(?m, ?i).

bbBegin(?m, ?i) :- afterJump(?m, ?i).

bbBegin(?m, ?i) :- instruction(?m, ?i, ?instr),
                   ?i = 1.

/**
 *  compute basic block ends
 */
bbEnd(?m, ?i) :- beforeLabel(?m, ?i).

bbEnd(?m, ?i) :- jump(?m, ?i).

bbEnd(?m, ?i) :- instruction(?m, ?i, ?instr),
                 !instruction(?m, ?j, ?instr1),
                 ?i + 1 = ?j.

/**
 *  compute basic block based on bb starts and ends
 */
basicBlock(?m, ?i, ?j) :- bbBegin(?m, ?i),
                          bbEnd(?m, ?j),
                          ?i <= ?j,
                          !hasBBBegin(?m, ?i, ?j).


hasBBBegin(?m, ?i, ?j) :- instruction(?m, ?i, ?instr1),
                          instruction(?m, ?j, ?instr2),
                          ?i < ?j,
                          ?k > ?i,
                          ?k <= ?j,
                          bbBegin(?m, ?k).

/**
 *  alternate computation of basic blocks
 */
inSameBasicBlock(?m, ?i, ?i) :- bbBegin(?m, ?i).


inSameBasicBlock(?m, ?i, ?k) :- inSameBasicBlock(?m, ?i, ?j),
                                ?j + 1 = ?k,
                                !bbEnd(?m, ?j).

basicBlock2(?m, ?i, ?j) :- inSameBasicBlock(?m, ?i, ?j),
                           bbEnd(?m, ?j).